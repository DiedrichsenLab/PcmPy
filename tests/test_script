#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
test_indicator 

@author: jdiedrichsen
"""
import sys
print(sys.path)
sys.path.append('/Users/jdiedrichsen/Python')
import unittest
import PcmPy as pcm 
import numpy as np 
import pickle

# class TestInference(unittest.TestCase):
f = open('/Users/jdiedrichsen/Python/PcmPy/demos/data_finger7T.p','rb')
Y,M = pickle.load(f)
f.close()
MC=pcm.ModelComponent('muscle',M[0].G)
YY = Y[0].measurements @ Y[0].measurements.T
n_channel = Y[0].measurements.shape[1]
Z = pcm.matrix.indicator(Y[0].obs_descriptors['cond_vec'])
X = pcm.matrix.indicator(Y[0].obs_descriptors['part_vec'])
theta = np.array([-0.5,0.1,0.5])
NM = pcm.model.BlockPlusIndepNoise(Y[0].obs_descriptors['part_vec'])
lik,dL,d2L = pcm.inference.likelihood_individ(theta, MC, YY, Z, X=None,
    n_channel=n_channel, return_deriv = 2,fit_scale=False, Noise=NM)