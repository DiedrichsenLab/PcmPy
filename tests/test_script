#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
test_indicator

@author: jdiedrichsen
"""
import sys
print(sys.path)
sys.path.append('/Users/jdiedrichsen/Python')
import unittest
import PcmPy as pcm
import numpy as np
import pickle

# class TestInference(unittest.TestCase):
f = open('/Users/jdiedrichsen/Python/PcmPy/demos/data_finger7T.p','rb')
Y,M = pickle.load(f)
f.close()
MC = []
MC.append(pcm.ModelComponent('muscle',M[0].G))
MC.append(pcm.ModelComponent('natural',M[1].G))
MC.append(pcm.ModelComponent('muscle+nat',[M[0].G,M[1].G]))

n_subj = len(Y)
Z=[None]*n_subj
X=[None]*n_subj
YY=[None]*n_subj
n_channel=[None]*n_subj
G_hat=[None]*n_subj
Noise=[None]*n_subj

for i in range(n_subj):
    Z[i], X[i], YY[i], n_channel[i], Noise[i], G_hat[i] = pcm.inference.set_up_fit(Y[i],run_effect = 'fixed')
theta = np.zeros((2+3*7,))
l,df,dff = pcm.inference.likelihood_group(theta, MC[2], YY, Z, X,
                       Noise=Noise,
                       n_channel=n_channel, fit_scale=True, 
                       return_deriv=2)
pass